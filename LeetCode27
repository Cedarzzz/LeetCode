package cedar.com;

public class leetcode27 {
    public static void main(String[] args) {
        int[] nums = {2,3,3,2,3,2,3};
        int result = 0;
        int val = 2;
        result = removeElement2(nums,val);

        for(int i = 0;i<nums.length;i++)
        {
            System.out.println(nums[i]);
        }
        System.out.println("number:" + result);
    }
    public static int removeElement1(int[] nums, int val)
            //正常换法，一个指针遍历，一个指针指在
    {
        int result = nums.length;
        int temp = 0;
        int j = 0;
        for(int i =0;i<nums.length;i++)
        {
            if(nums[i] == val)
            {
                result--;
            }
            else
            {
                temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
                j++;
            }

        }
        return result;
    }
    public static int removeElement2(int[] nums, int val)
    //双指针法。当左指针等于第一个val，右指针等于第一个不是val的数。将其互换
    {
        int result = nums.length;
        int temp = 0;
        int j = nums.length-1; //右指针
        int i =0; //左指针
        while(i<j)
        {
            while(i<j&&nums[j] == val)
            {
                j--;
            }
            while(i<j&nums[i] != val)
            {
                i++;
            }
            temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
        }
        for(i =0;i<nums.length;i++)
        {
            if(nums[i] == val)
            {
                result--;
            }
        }
        return result;
    }
}
