题目：给定一个整数数组，判断是否存在重复元素。
如果存在一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。
示例 1:
输入: [1,2,3,1]
输出: true
方法一：将每个值存放在对应的位置，将最后哈希表的长度和给定的数组长度进行对比。若是有重复，该位置会被覆盖。哈希表长度会小于数组长度
        int number = nums.length;
        if(nums.length == 0)
        return false;
        boolean isOk = false;
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i = 0;i<nums.length;i++){
            map.put(nums[i],nums[i]);
        }
        if(map.size()!=number){
            isOk = true;
        }
        return isOk;
方法二：将每个值都放入对应的位置，并将该位置的值设为1。遍历数组，若是有相同的则将该位置的值加1，并直接返回。
        int number = nums.length;
        if(nums.length == 0)
        return false;
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int num:nums){
            if(map.containsKey(num) == false){
                map.put(num,1);
            }
            else{
                int temp = map.get(num);
                map.put(num,temp + 1);
                return true;
            }
        //遍历哈希表的方法
        for(int k:map.keySet()){
            if(map.get(k) > 1){
                return true;
            }
        }
        }
        return isOk;
